version: "3"

services:
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - hostnet
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - hostnet
    healthcheck:
      # test: ["CMD", "pg_isready -h hostnet -p 5433"]
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
  persistent_layer: 
    build:
      context: .
      dockerfile: dockerfiles/PersistentLayerDockerfile
    depends_on:
      db:
        condition: "service_healthy"
      rabbitmq:
        condition: "service_healthy"
    volumes:
      - .:/app
    networks:
      - hostnet
  fetching_layer: 
    build:
      context: .
      dockerfile: dockerfiles/FetchingLayerDockerfile
    depends_on:
      db:
        condition: "service_healthy"
      rabbitmq:
        condition: "service_healthy"
    volumes:
      - .:/app
    networks:
      - hostnet  
    

volumes:
  db:
    driver: local
networks:
  hostnet:
    driver: bridge